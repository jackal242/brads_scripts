#!/bin/bash

##############################################################
# Block multiple failed logins via ssh
#
# By: Brad Allison
# Date: 10/16/2014
##############################################################
#
# View the current iptables rules =>  iptables -L -n
# Clean out all the rules =>          iptables -F
##############################################################

##############################################################
# Looking for attempts on existing and non-existing users. For example:
# Nov  2 22:44:07 pbxer sshd[28318]: Failed password for root from 74.143.42.70 port 52416 ssh2
# Nov  3 00:06:57 pbxer sshd[31767]: Failed password for invalid user mat3 from 192.203.145.200 port 35841 ssh2
##############################################################


##############################################################
# White List
##############################################################
whitelist[0]="123.123.123.123"  		# Example 1
whitelist[1]="123.123.123.123"  		# Example 2
whitelist[2]="123.123.123.123"  		# Example 3

##############################################################
#  Do the work
##############################################################
tail -10000 /var/log/secure | awk '/sshd/ && /Failed password for/ { if (/invalid user/) try[$13]++; else try[$11]++; }
END { for (h in try) if (try[h] > 4) print h; }' |
while read ip
do
	skip=0
	for whitelist_ip in "${whitelist[@]}"
	do
    		# echo "$whitelist_ip vs $ip"
		if [[ "$ip" == "$whitelist_ip" ]]; then
			echo $ip matched whitelist ip $whitelist_ip.  Skipping...
			skip=1
		fi
	done
	if [[ "$skip" == "1" ]]; then
		continue  # break the while loop
	fi
	# echo $ip not in whitelist.
		
	# note: check if IP is already blocked...
	/sbin/iptables -L -n | grep $ip > /dev/null
	if [ $? -eq 0 ] ; then
		# echo "already denied ip: [$ip]" ;
		true	
	else
		# echo "Denying ip: $ip" | sendmail brad.allison@XXXXXX.com
		logger -p authpriv.notice "*** Blocking SSH attempt from: $ip"
		/sbin/iptables -I INPUT -s $ip -j DROP
	fi
done


		
logger -p authpriv.notice "*** $0 ran"
